# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: BuildDockerImage
      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
    - name: Publish to Docker Repository
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: christopherchen/practice:practice
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
#     - name: Publish to Aliyun Docker Repository
#       uses: elgohr/Publish-Docker-Github-Action@master
#       with:
#         name: registry.cn-shenzhen.aliyuncs.com/christ/christopherchen:wechat
#         username: ${{ secrets.ALIYUN_DOCKER_USERNAME }}
#         password: ${{ secrets.ALIYUN_DOCKER_PASSWORD }}
#     - name: Build Docker Image And Push
#       id: buildAndPushImage
#       uses: risfeng/docker-image-build-push-action@v1.0
#       with:
#         registry_url: 'registry.cn-shenzhen.aliyuncs.com'
#         namespaces: 'christ'
#         repository_name: 'christopherchen'
#         user_name: ${{ secrets.ALIYUN_DOCKER_USERNAME }}
#         password: ${{ secrets.ALIYUN_DOCKER_PASSWORD }}
#         image_version: 'v1.0'
#         docker_file: '.'
